def best(txt, trr):
    def convert(item):
        return str(item)

    text = convert(txt)
    strr = convert(trr)

    p = [0] * len(strr)  # префикс-функция размером с нашу строку заполненная 0
    # по ней будем рассчитывать на сколько сдвинем шаблон
    j = 0
    i = 1

    while i < len(strr):  # заполняем массив префикс-функции ищем совпадения
        if strr[j] == strr[i]:
            p[i] = j + 1
            i += 1
            j += 1
        else:
            if j == 0:
                p[i] = 0;
                i += 1
            else:
                j = p[j - 1]

    m = len(strr)  # длина строки
    n = len(text)  # длина шаблона

    i = 0  # указатель пробегает по строке
    j = 0  # указатель пробегает по шаблону
    while i < n:
        if text[i] == strr[j]:  # пока совпадает не передвигаем шаблон
            i += 1
            j += 1
            if j == m:  # если дошли до конца шаблона и все совпадало
                print("шаблон найден")
                break
        else:
            if j > 0:  # если рассматриваем не первый символ в шаблоне
                j = p[j - 1]  # то сдвигаем его на несколько символов согласно префикс-функции
            else:
                i += 1

    if i == n and j != m:
        print("шаблон не найден")